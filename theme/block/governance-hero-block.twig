{#
/**
 * Block Name: Governance Hero
 */
#}


<div id="governance-hero-{{ block.id }}" class="governance-hero">
  <canvas id="tsparticles"></canvas>
  <div class="container">
    <div class="row">
      <div class="col-12 text-center governance-hero__index">
        {% if page.title %}
        <h1 class="governance-hero__title">{{ page.title }}</h1>
        {% endif %}
      </div>
      {% if fields.governance_hero.tabs %}
      <div class="row">
        <div class="col-md-12 col-lg-6 governance-hero__index">
          <div class="nav flex-column nav-pills me-3" id="v-pills-tab" role="tablist" aria-orientation="vertical">
            {% set count = 1 %}
            {% for field in fields.governance_hero.tabs %}
              <div class="governance-hero__link d-flex align-items-center {{ count == 1 ? 'active' : ' ' }}"
                   id="v-pills-{{ count }}-tab" data-bs-toggle="pill"
                   data-bs-target="#v-pills-{{ count }}" type="button" role="tab" aria-controls="v-pills-{{ count }}"
                   aria-selected="true">
                {{ count }}{{ '. ' }}{{ field.title }}
              </div>

              {% set count = count + 1 %}
            {% endfor %}
          </div>
        </div>
        <div class="col-md-12 col-lg-6 governance-hero__index">
          <div class="tab-content" id="v-pills-tabContent">
            {% set count = 1 %}
            {% for field in fields.governance_hero.tabs %}
              <div class="governance-hero__tab tab-pane fade {{ count == 1 ? 'show active' : ' ' }}"
                   id="v-pills-{{ count }}" role="tabpanel"
                   aria-labelledby="v-pills-{{ count }}-tab">{{ field.description }}</div>

              {% set count = count + 1 %}
            {% endfor %}
          </div>
        </div>
      </div>
      {% endif %}
    </div>

  </div>
</div>
<style>
  /* ---- tsparticles container ---- */
  #tsparticles {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: 50% 50%;
  }
</style>
<script>

  var mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');
  var loadedParticles = false;

  setInterval(function(){

    if ( loadedParticles || mediaQuery.matches ) {
      return;
    }

    tsParticles.load("tsparticles", {
      fps_limit: 60,
      interactivity: {
        detect_on: "canvas",
        events: {
          onclick: { enable: true, mode: "pause" },
          resize: true
        },
        modes: {
          bubble: { distance: 400, duration: 2, opacity: 0.2, size: 40, speed: 3 },
          grab: { distance: 400, line_linked: { opacity: 0.2 } },
          push: { particles_nb: 4 },
          remove: { particles_nb: 2 },
          repulse: { distance: 200, duration: 0.4 }
        }
      },
      particles: {
        color: { value: "#E4F4FA" },
        line_linked: {
          color: "#E4F4FA",
          distance: 150,
          enable: true,
          opacity: 0.2,
          width: 1
        },
        move: {
          attract: { enable: false, rotateX: 600, rotateY: 1200 },
          bounce: false,
          direction: "none",
          enable: true,
          out_mode: "out",
          random: false,
          speed: 2,
          straight: false
        },
        number: { density: { enable: true, value_area: 800 }, value: 80 },
        opacity: {
          anim: { enable: false, opacity_min: 0.1, speed: 1, sync: false },
          random: false,
          value: 0.2
        },
        shape: {
          character: {
            fill: false,
            font: "Verdana",
            style: "",
            value: "*",
            weight: "400"
          },
          image: {
            height: 100,
            replace_color: true,
            src: "images/github.svg",
            width: 100
          },
          polygon: { nb_sides: 5 },
          stroke: { color: "#000000", width: 0 },
          type: "circle"
        },
        size: {
          anim: { enable: false, size_min: 0.1, speed: 40, sync: false },
          random: true,
          value: 5
        }
      },
      polygon: {
        draw: { enable: false, lineColor: "#E4F4FA", lineWidth: 0.5 },
        move: { radius: 10 },
        scale: 1,
        type: "none",
        url: ""
      },
      retina_detect: true
    });
  
    // Initialized
    loadedParticles = true;

  }, 250);
  
</script>



